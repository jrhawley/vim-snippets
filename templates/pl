### programName ###################################################################################
# Description goes here

### HISTORY #######################################################################################
# Version               Date                Coder           Comments
# 0.01

### INCLUDES ######################################################################################
use strict;
use warnings;
use Carp;
use Getopt::Long;
use Pod::Usage;

### COMMAND LINE DEFAULT ARGUMENTS ################################################################
# list of arguments and default values go here as hash key/value pairs
our %opts = (
	);

### MAIN CALLER ###################################################################################
my $result = main();
exit($result);

### FUNCTIONS #####################################################################################

### main ##########################################################################################
# Description:
# 	Main subroutine for program
# Input Variables:
# 	%opts: named command line arguments
# Output Variables:
# 	Not applicable

sub main {
	# get the command line arguments
	GetOptions(
		\%opts,
		"help|?",
		"man",
		) or pod2usage(64);

	if ($opts{'help'}) { pod2usage(1) };
	if ($opts{'man'}) { pod2usage(-exitstatus => 0, -verbose => 2) };

	while(my ($arg, $value) = each(%opts)) {
		if (!defined $value) {
			print "ERROR: Missing argument \"--$arg\"\n";
			pod2usage(128);
			}
		}

	return 0;
	}

__END__

=head1 NAME

programName

=head1 SYNOPSIS

B<programName> [options] [file ...]

    Options:
    --help          brief help message
    --man           full documentation

=head1 OPTIONS

=over 8

=item B<--help>

Print a brief help message and exit.

=item B<--man>

Print the manual page.

=back

=head1 DESCRIPTION

B<programName> place description of application here

=head1 EXAMPLE

programName

=head1 AUTHOR

username -- Boutros Lab

The Ontario Institute for Cancer Research

=head1 SEE ALSO

=cut

